name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request: 
    branches: [ master ]
env:
  REPO: nabetse28/UCreativa-DevOps-Project


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    
    - name: Sonarcloud scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}       
    - name: Login to Dockerhub Registry
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      env:
        CONTAINER_IMAGE: ${{env.REPO}}:${{github.sha}}
        CONTAINER_IMAGE_LATEST: "${{ env.REPO }}:latest"
      run: |
        docker build -t  $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .
    - name: Scan Docker image
      uses: anchore/scan-action@v2
      id: scan
      with:
        image: ${{env.REPO}}:${{github.sha}}
        acs-report-enable: true
        fail-build: false
    - name: Push Docker image
      env:
        CONTAINER_IMAGE: ${{env.REPO}}:${{github.sha}}
        CONTAINER_IMAGE_LATEST: "${{ env.REPO }}:latest"
      run: |
        docker push $CONTAINER_IMAGE 
        docker push $CONTAINER_IMAGE_LATEST 

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-east-1

    - name: Update kube config
      run: aws eks update-kubeconfig --name simple-bank --region eu-east-1

    - name: Deploy image to Amazon EKS
      run: |
        kubectl apply -f eks/aws-auth.yaml
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
        kubectl apply -f eks/issuer.yaml
        kubectl apply -f eks/ingress.yaml
